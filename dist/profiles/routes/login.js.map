{"version":3,"sources":["../../../profiles/routes/login.js"],"names":["passport","require","Joi","module","exports","req","res","next","schema","object","keys","email","string","password","regex","RegExp","validate","body","error","value","details","context","key","status","send","end","authenticate","err","user","info","message","redirect"],"mappings":"AAAA;;AACA,IAAMA,WAAWC,QAAQ,kCAAR,CAAjB;AACA,IAAMC,MAAMD,QAAQ,KAAR,CAAZ;AACA;AACAE,OAAOC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AACvC,QAAMC,SAASN,IAAIO,MAAJ,GAAaC,IAAb,CAAkB;AAC7BC,eAAOT,IAAIU,MAAJ,GAAaD,KAAb,EADsB;AAE7BE,kBAAUX,IAAIU,MAAJ,GAAaE,KAAb;AACN;AACA;AACA,YAAIC,MAAJ,CAAW,qBAAX,CAHM;AAFmB,KAAlB,CAAf;;AADuC,wBAShBb,IAAIc,QAAJ,CAAaX,IAAIY,IAAjB,EAAuBT,MAAvB,CATgB;AAAA,QAShCU,KATgC,iBAShCA,KATgC;AAAA,QASzBC,KATyB,iBASzBA,KATyB;;AAUvC,QAAID,KAAJ,EAAW;AACP,gBAAQA,MAAME,OAAN,CAAc,CAAd,EAAiBC,OAAjB,CAAyBC,GAAjC;AACI,iBAAK,OAAL;AACIhB,oBAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBN,2BAAO;AADU,iBAArB;AAGA;AACJ,iBAAK,UAAL;AACIZ,oBAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBN,2BAAO;AADU,iBAArB;AAGA;AACJ;AACIZ,oBAAIiB,MAAJ,CAAW,GAAX,EAAgBE,GAAhB;AAZR;AAcH,KAfD,MAeO;AACHzB,iBAAS0B,YAAT,CAAsB,cAAtB,EAAsC,UAAUC,GAAV,EAAeC,IAAf,EAAqBC,IAArB,EAA2B;AAC7D,gBAAIF,GAAJ,EAAS;AACL,uBAAOpB,KAAKoB,GAAL,CAAP;AACH;AACD,gBAAI,CAACC,IAAL,EAAW;AACPtB,oBAAIiB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACjBN,2BAAOW,KAAKC;AADK,iBAArB;AAGH,aAJD,MAIO;AACHxB,oBAAIiB,MAAJ,CAAW,GAAX,EAAgBQ,QAAhB,CAAyB,WAAzB;AACH;AACJ,SAXD,EAWG1B,GAXH,EAWQC,GAXR,EAWaC,IAXb;AAYH;AACJ,CAvCD","file":"login.js","sourcesContent":["\"use strict\";\nconst passport = require('../../Services/Passport/Passport');\nconst Joi = require('joi');\n//route used for logging a user in\nmodule.exports = function (req, res, next) {\n    const schema = Joi.object().keys({\n        email: Joi.string().email(),\n        password: Joi.string().regex(\n            //password must contain letters or numbers\n            //and be a minumum of 6 characters, maximum 30\n            new RegExp('^[a-zA-Z0-9]{6,30}$')\n        )\n    });\n    const {error, value} = Joi.validate(req.body, schema);\n    if (error) {\n        switch (error.details[0].context.key) {\n            case 'email':\n                res.status(400).send({\n                    error: 'please provide valid email address'\n                });\n                break;\n            case 'password':\n                res.status(400).send({\n                    error: 'please provide a valid password'\n                });\n                break;\n            default:\n                res.status(400).end();\n        }\n    } else {\n        passport.authenticate('local-signin', function (err, user, info) {\n            if (err) {\n                return next(err);\n            }\n            if (!user) {\n                res.status(401).send({\n                    error: info.message\n                });\n            } else {\n                res.status(200).redirect('/profiles');\n            }\n        })(req, res, next);\n    }\n};"]}