{"version":3,"sources":["../index.js"],"names":["express","require","volleyball","env","process","NODE_ENV","config","session","bodyParser","passport","nodemon","cookieParser","RedisStore","profiles","barber_profiles","reviews","haircuts","Hairstyle","photos","dbmain","setup","__dirname","app","use","static","store","url","redisStore","secret","resave","saveUninitialized","urlencoded","extended","json","initialize","listen","server","port","err","console","log","module","exports"],"mappings":"AAAA;;AACA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,YAAR,CAAnB;AACA,IAAME,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,SAASL,QAAQ,qBAAR,EAA+BE,GAA/B,CAAf;AACA,IAAMI,UAAUN,QAAQ,iBAAR,CAAhB;AACA,IAAMO,aAAaP,QAAQ,aAAR,CAAnB;AACA,IAAMQ,WAAWR,QAAQ,UAAR,CAAjB;AACA,IAAMS,UAAUT,QAAQ,SAAR,CAAhB;AACA,IAAMU,eAAeV,QAAQ,eAAR,CAArB;AACA,IAAMW,aAAaX,QAAQ,eAAR,EAAyBM,OAAzB,CAAnB;;AAEA,IAAMM,WAAWZ,QAAQ,yBAAR,CAAjB;AACA,IAAMa,kBAAkBb,QAAQ,gCAAR,CAAxB;AACA,IAAMc,UAAUd,QAAQ,wBAAR,CAAhB;AACA,IAAMe,WAAWf,QAAQ,yBAAR,CAAjB;AACA,IAAMgB,YAAYhB,QAAQ,0BAAR,CAAlB;AACA,IAAMiB,SAASjB,QAAQ,uBAAR,CAAf;;AAEA;AACA,IAAMkB,SAASlB,QAAQ,oBAAR,CAAf;AACAkB,OAAOC,KAAP,CAAaC,YAAY,WAAzB;AACA;AACA,IAAMC,MAAMtB,SAAZ;;AAEA;AACAsB,IAAIC,GAAJ,CAAQb,OAAR;AACAY,IAAIC,GAAJ,CAAQvB,QAAQwB,MAAR,CAAe,QAAf,CAAR;AACAF,IAAIC,GAAJ,CAAQhB,QAAQ;AACZkB,WAAO,IAAIb,UAAJ,CAAe;AAClBc,aAAKpB,OAAOqB,UAAP,CAAkBD;AADL,KAAf,CADK;AAIZE,YAAQtB,OAAOqB,UAAP,CAAkBC,MAJd;AAKZC,YAAQ,KALI;AAMZC,uBAAmB;AANP,CAAR,CAAR;AAQAR,IAAIC,GAAJ,CAAQrB,UAAR;AACAoB,IAAIC,GAAJ,CAAQf,WAAWuB,UAAX,CAAsB,EAACC,UAAU,IAAX,EAAtB,CAAR;AACAV,IAAIC,GAAJ,CAAQf,WAAWyB,IAAX,EAAR;AACAX,IAAIC,GAAJ,CAAQZ,cAAR;AACAW,IAAIC,GAAJ,CAAQd,SAASyB,UAAT,EAAR;AACAZ,IAAIC,GAAJ,CAAQd,SAASF,OAAT,EAAR;;AAEA;AACAe,IAAIC,GAAJ,CAAQ,WAAR,EAAqBV,QAArB;AACAS,IAAIC,GAAJ,CAAQ,mBAAR,EAA6BT,eAA7B;AACAQ,IAAIC,GAAJ,CAAQ,UAAR,EAAoBR,OAApB;AACAO,IAAIC,GAAJ,CAAQ,WAAR,EAAqBP,QAArB;AACAM,IAAIC,GAAJ,CAAQ,aAAR,EAAuBN,SAAvB;AACAK,IAAIC,GAAJ,CAAQ,SAAR,EAAmBL,MAAnB;;AAEA;AACAI,IAAIa,MAAJ,CAAW7B,OAAO8B,MAAP,CAAcC,IAAzB,EAA+B,UAAUC,GAAV,EAAe;AAC1C,QAAIA,GAAJ,EAAS;AACLC,gBAAQC,GAAR,CAAY,4CAA4CF,GAAxD;AACH;AACDC,YAAQC,GAAR,CAAY,iCAAZ;AACH,CALD;;AAOAC,OAAOC,OAAP,GAAiBpB,GAAjB","file":"index.js","sourcesContent":["\"use strict\";\nconst express = require('express');\nconst volleyball = require('volleyball');\nconst env = process.env.NODE_ENV || 'development';\nconst config = require('./config/config_env')[env];\nconst session = require('express-session');\nconst bodyParser = require('body-parser');\nconst passport = require('passport');\nconst nodemon = require('nodemon');\nconst cookieParser = require('cookie-parser');\nconst RedisStore = require('connect-redis')(session);\n\nconst profiles = require('./profiles/routes/index');\nconst barber_profiles = require('./profiles/routes/barber/index');\nconst reviews = require('./reviews/routes/index');\nconst haircuts = require('./haircuts/routes/index');\nconst Hairstyle = require('./Hairstyle/routes/index');\nconst photos = require('./photos/routes/index');\n\n// //import db\nconst dbmain = require(\"./config/DB/DBmain\");\ndbmain.setup(__dirname + '/DBModels');\n//init app to express\nconst app = express();\n\n//Express MiddleWare\napp.use(nodemon);\napp.use(express.static('public'));\napp.use(session({\n    store: new RedisStore({\n        url: config.redisStore.url\n    }),\n    secret: config.redisStore.secret,\n    resave: false,\n    saveUninitialized: false\n}));\napp.use(volleyball);\napp.use(bodyParser.urlencoded({extended: true}));\napp.use(bodyParser.json());\napp.use(cookieParser());\napp.use(passport.initialize());\napp.use(passport.session());\n\n//sets routes to appropriate names\napp.use(\"/profiles\", profiles);\napp.use('/profiles/barbers', barber_profiles);\napp.use('/reviews', reviews);\napp.use('/haircuts', haircuts);\napp.use('/hairstyles', Hairstyle);\napp.use('/photos', photos);\n\n//starts server and assigns it to a port\napp.listen(config.server.port, function (err) {\n    if (err) {\n        console.log('There was a problem starting the server' + err);\n    }\n    console.log(\"Server has started on port 3000\");\n});\n\nmodule.exports = app;\n"]}