{"version":3,"sources":["../index.js"],"names":["express","require","volleyball","env","process","NODE_ENV","config","session","bodyParser","passport","cookieParser","RedisStore","profiles","barber_profiles","reviews","haircuts","Hairstyle","photos","dbmain","setup","__dirname","app","use","static","store","url","redisStore","secret","resave","saveUninitialized","urlencoded","extended","json","initialize","req","res","next","setHeader","listen","server","port","err","console","log","module","exports"],"mappings":"AAAA;;AACA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,YAAR,CAAnB;AACA,IAAME,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,SAASL,QAAQ,qBAAR,EAA+BE,GAA/B,CAAf;AACA,IAAMI,UAAUN,QAAQ,iBAAR,CAAhB;AACA,IAAMO,aAAaP,QAAQ,aAAR,CAAnB;AACA,IAAMQ,WAAWR,QAAQ,UAAR,CAAjB;AACA,IAAMS,eAAeT,QAAQ,eAAR,CAArB;AACA,IAAMU,aAAaV,QAAQ,eAAR,EAAyBM,OAAzB,CAAnB;;AAEA,IAAMK,WAAWX,QAAQ,yBAAR,CAAjB;AACA,IAAMY,kBAAkBZ,QAAQ,gCAAR,CAAxB;AACA,IAAMa,UAAUb,QAAQ,wBAAR,CAAhB;AACA,IAAMc,WAAWd,QAAQ,yBAAR,CAAjB;AACA,IAAMe,YAAYf,QAAQ,0BAAR,CAAlB;AACA,IAAMgB,SAAShB,QAAQ,uBAAR,CAAf;;AAEA;AACA,IAAMiB,SAASjB,QAAQ,oBAAR,CAAf;AACAiB,OAAOC,KAAP,CAAaC,YAAY,WAAzB;AACA;AACA,IAAMC,MAAMrB,SAAZ;;AAEA;AACAqB,IAAIC,GAAJ,CAAQtB,QAAQuB,MAAR,CAAe,QAAf,CAAR;AACAF,IAAIC,GAAJ,CAAQf,QAAQ;AACZiB,WAAO,IAAIb,UAAJ,CAAe;AAClBc,aAAKnB,OAAOoB,UAAP,CAAkBD;AADL,KAAf,CADK;AAIZE,YAAQrB,OAAOoB,UAAP,CAAkBC,MAJd;AAKZC,YAAQ,KALI;AAMZC,uBAAmB;AANP,CAAR,CAAR;;AASAR,IAAIC,GAAJ,CAAQpB,UAAR;AACAmB,IAAIC,GAAJ,CAAQd,WAAWsB,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;AACAV,IAAIC,GAAJ,CAAQd,WAAWwB,IAAX,EAAR;AACAX,IAAIC,GAAJ,CAAQZ,cAAR;AACAW,IAAIC,GAAJ,CAAQb,SAASwB,UAAT,EAAR;AACAZ,IAAIC,GAAJ,CAAQb,SAASF,OAAT,EAAR;;AAEA;AACAc,IAAIC,GAAJ,CAAQ,UAAUY,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9BD,QAAIE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACA;AACAF,QAAIE,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C;AACA;AACAF,QAAIE,SAAJ,CAAc,8BAAd,EAA8C,+BAA9C;AACA;AACA;AACAF,QAAIE,SAAJ,CAAc,kCAAd,EAAkD,IAAlD;AACA;AACAD;AACH,CAXD;;AAaA;AACAf,IAAIC,GAAJ,CAAQ,WAAR,EAAqBV,QAArB;AACAS,IAAIC,GAAJ,CAAQ,mBAAR,EAA6BT,eAA7B;AACAQ,IAAIC,GAAJ,CAAQ,UAAR,EAAoBR,OAApB;AACAO,IAAIC,GAAJ,CAAQ,WAAR,EAAqBP,QAArB;AACAM,IAAIC,GAAJ,CAAQ,aAAR,EAAuBN,SAAvB;AACAK,IAAIC,GAAJ,CAAQ,SAAR,EAAmBL,MAAnB;;AAEA;AACAI,IAAIiB,MAAJ,CAAWhC,OAAOiC,MAAP,CAAcC,IAAzB,EAA+B,UAAUC,GAAV,EAAe;AAC1C,QAAIA,GAAJ,EAAS;AACLC,gBAAQC,GAAR,CAAY,4CAA4CF,GAAxD;AACH;AACDC,YAAQC,GAAR,CAAY,iCAAZ;AACH,CALD;;AAQAC,OAAOC,OAAP,GAAiBxB,GAAjB","file":"index.js","sourcesContent":["\"use strict\";\nconst express = require('express');\nconst volleyball = require('volleyball');\nconst env = process.env.NODE_ENV || 'development';\nconst config = require('./config/config_env')[env];\nconst session = require('express-session');\nconst bodyParser = require('body-parser');\nconst passport = require('passport');\nconst cookieParser = require('cookie-parser');\nconst RedisStore = require('connect-redis')(session);\n\nconst profiles = require('./profiles/routes/index');\nconst barber_profiles = require('./profiles/routes/barber/index');\nconst reviews = require('./reviews/routes/index');\nconst haircuts = require('./haircuts/routes/index');\nconst Hairstyle = require('./Hairstyle/routes/index');\nconst photos = require('./photos/routes/index');\n\n// //import db\nconst dbmain = require(\"./config/DB/DBmain\");\ndbmain.setup(__dirname + '/DBModels');\n//init app to express\nconst app = express();\n\n//Express MiddleWare\napp.use(express.static('public'));\napp.use(session({\n    store: new RedisStore({\n        url: config.redisStore.url\n    }),\n    secret: config.redisStore.secret,\n    resave: false,\n    saveUninitialized: false\n}));\n\napp.use(volleyball);\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(bodyParser.json());\napp.use(cookieParser());\napp.use(passport.initialize());\napp.use(passport.session());\n\n// Add headers\napp.use(function (req, res, next) {\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    // Request methods you wish to allow\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\n    // Request headers you wish to allow\n    res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');\n    // Set to true if you need the website to include cookies in the requests sent\n    // to the API (e.g. in case you use sessions)\n    res.setHeader('Access-Control-Allow-Credentials', true);\n    // Pass to next layer of middleware\n    next();\n});\n\n//sets routes to appropriate names\napp.use(\"/profiles\", profiles);\napp.use('/profiles/barbers', barber_profiles);\napp.use('/reviews', reviews);\napp.use('/haircuts', haircuts);\napp.use('/hairstyles', Hairstyle);\napp.use('/photos', photos);\n\n//starts server and assigns it to a port\napp.listen(config.server.port, function (err) {\n    if (err) {\n        console.log('There was a problem starting the server' + err);\n    }\n    console.log(\"Server has started on port 3000\");\n});\n\n\nmodule.exports = app;\n"]}