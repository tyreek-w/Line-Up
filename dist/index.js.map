{"version":3,"sources":["../index.js"],"names":["express","require","volleyball","env","process","NODE_ENV","config","session","bodyParser","passport","profiles","barbers","barbershops","reviews","haircuts","Hairstyle","photos","dbmain","setup","__dirname","app","use","static","secret","redisStore","resave","saveUninitialized","urlencoded","extended","json","initialize","req","res","next","setHeader","locals","listen","server","port","err","console","log","module","exports"],"mappings":"AAAA;;AACA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,YAAR,CAAnB;AACA,IAAME,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,SAASL,QAAQ,qBAAR,EAA+BE,GAA/B,CAAf;AACA,IAAMI,UAAUN,QAAQ,iBAAR,CAAhB;AACA,IAAMO,aAAaP,QAAQ,aAAR,CAAnB;AACA,IAAMQ,WAAWR,QAAQ,UAAR,CAAjB;AACA;AACA;;AAEA,IAAMS,WAAWT,QAAQ,yBAAR,CAAjB;AACA,IAAMU,UAAUV,QAAQ,uBAAR,CAAhB;AACA,IAAMW,cAAcX,QAAQ,2BAAR,CAApB;AACA,IAAMY,UAAUZ,QAAQ,wBAAR,CAAhB;AACA,IAAMa,WAAWb,QAAQ,yBAAR,CAAjB;AACA,IAAMc,YAAYd,QAAQ,0BAAR,CAAlB;AACA,IAAMe,SAASf,QAAQ,uBAAR,CAAf;;AAEA;AACA,IAAMgB,SAAShB,QAAQ,oBAAR,CAAf;AACAgB,OAAOC,KAAP,CAAaC,YAAY,WAAzB;AACA;AACA,IAAMC,MAAMpB,SAAZ;;AAEA;AACAoB,IAAIC,GAAJ,CAAQrB,QAAQsB,MAAR,CAAe,QAAf,CAAR;AACAF,IAAIC,GAAJ,CAAQd,QAAQ;AACZgB,YAAQjB,OAAOkB,UAAP,CAAkBD,MADd;AAEZE,YAAQ,IAFI;AAGZC,uBAAmB;AACnB;AACA;AACA;AACA;AAPY,CAAR,CAAR;;AAUAN,IAAIC,GAAJ,CAAQnB,UAAR;AACAkB,IAAIC,GAAJ,CAAQb,WAAWmB,UAAX,CAAsB,EAACC,UAAU,KAAX,EAAtB,CAAR;AACAR,IAAIC,GAAJ,CAAQb,WAAWqB,IAAX,EAAR;AACA;AACAT,IAAIC,GAAJ,CAAQZ,SAASqB,UAAT,EAAR;AACAV,IAAIC,GAAJ,CAAQZ,SAASF,OAAT,EAAR;;AAEA;AACAa,IAAIC,GAAJ,CAAQ,UAAUU,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9BD,QAAIE,SAAJ,CAAc,6BAAd,EAA6C,GAA7C;AACA;AACAF,QAAIE,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C;AACA;AACAF,QAAIE,SAAJ,CAAc,8BAAd,EAA8C,+BAA9C;AACA;AACA;AACAF,QAAIE,SAAJ,CAAc,kCAAd,EAAkD,IAAlD;AACA;AACAD;AACH,CAXD;;AAaAb,IAAIC,GAAJ,CAAQ,UAAUU,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;AAC9BD,QAAIG,MAAJ,CAAW5B,OAAX,GAAqBwB,IAAIxB,OAAzB;AACA0B;AACH,CAHD;AAIA;AACAb,IAAIC,GAAJ,CAAQ,WAAR,EAAqBX,QAArB;AACAU,IAAIC,GAAJ,CAAQ,UAAR,EAAoBV,OAApB;AACAS,IAAIC,GAAJ,CAAQ,UAAR,EAAoBR,OAApB;AACAO,IAAIC,GAAJ,CAAQ,WAAR,EAAqBP,QAArB;AACAM,IAAIC,GAAJ,CAAQ,aAAR,EAAuBN,SAAvB;AACAK,IAAIC,GAAJ,CAAQ,SAAR,EAAmBL,MAAnB;AACAI,IAAIC,GAAJ,CAAQ,cAAR,EAAwBT,WAAxB;;AAEA;AACAQ,IAAIgB,MAAJ,CAAW9B,OAAO+B,MAAP,CAAcC,IAAzB,EAA+B,UAAUC,GAAV,EAAe;AAC1C,QAAIA,GAAJ,EAAS;AACLC,gBAAQC,GAAR,CAAY,4CAA4CF,GAAxD;AACH;AACDC,YAAQC,GAAR,CAAY,iCAAZ;AACH,CALD;;AAQAC,OAAOC,OAAP,GAAiBvB,GAAjB","file":"index.js","sourcesContent":["\"use strict\";\nconst express = require('express');\nconst volleyball = require('volleyball');\nconst env = process.env.NODE_ENV || 'development';\nconst config = require('./config/config_env')[env];\nconst session = require('express-session');\nconst bodyParser = require('body-parser');\nconst passport = require('passport');\n// const SequelizeStore = require('connect-session-sequelize')(session.Store);\n// const RedisStore = require('connect-redis')(session);\n\nconst profiles = require('./profiles/routes/index');\nconst barbers = require('./barber/routes/index');\nconst barbershops = require('./barbershop/routes/index');\nconst reviews = require('./reviews/routes/index');\nconst haircuts = require('./haircuts/routes/index');\nconst Hairstyle = require('./Hairstyle/routes/index');\nconst photos = require('./photos/routes/index');\n\n// //import db\nconst dbmain = require(\"./config/DB/DBmain\");\ndbmain.setup(__dirname + '/DBModels');\n//init app to express\nconst app = express();\n\n//Express MiddleWare\napp.use(express.static('public'));\napp.use(session({\n    secret: config.redisStore.secret,\n    resave: true,\n    saveUninitialized: true\n    // store: new SequelizeStore({\n    //     db: require(\"./config/DB/config_db\")\n    // }),\n    // cookie: { maxAge: 60 * 60 * 1000 }\n}));\n\napp.use(volleyball);\napp.use(bodyParser.urlencoded({extended: false}));\napp.use(bodyParser.json());\n//initialize passport\napp.use(passport.initialize());\napp.use(passport.session());\n\n// Add headers\napp.use(function (req, res, next) {\n    res.setHeader('Access-Control-Allow-Origin', '*');\n    // Request methods you wish to allow\n    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\n    // Request headers you wish to allow\n    res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');\n    // Set to true if you need the website to include cookies in the requests sent\n    // to the API (e.g. in case you use sessions)\n    res.setHeader('Access-Control-Allow-Credentials', true);\n    // Pass to next layer of middleware\n    next();\n});\n\napp.use(function (req, res, next) {\n    res.locals.session = req.session;\n    next();\n});\n//sets routes to appropriate names\napp.use(\"/profiles\", profiles);\napp.use('/barbers', barbers);\napp.use('/reviews', reviews);\napp.use('/haircuts', haircuts);\napp.use('/hairstyles', Hairstyle);\napp.use('/photos', photos);\napp.use('/barbershops', barbershops);\n\n//starts server and assigns it to a port\napp.listen(config.server.port, function (err) {\n    if (err) {\n        console.log('There was a problem starting the server' + err);\n    }\n    console.log(\"Server has started on port 3000\");\n});\n\n\nmodule.exports = app;\n"]}