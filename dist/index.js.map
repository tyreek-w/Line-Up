{"version":3,"sources":["../index.js"],"names":["express","require","volleyball","env","process","NODE_ENV","config","session","bodyParser","passport","cookieParser","RedisStore","profiles","app","use","static","store","url","redisStore","secret","resave","saveUninitialized","urlencoded","extended","json","initialize","listen","server","port","err","console","log","module","exports"],"mappings":"AAAA;;AACA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,aAAaD,QAAQ,YAAR,CAAnB;AACA,IAAME,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;AACA,IAAMC,SAASL,QAAQ,qBAAR,EAA+BE,GAA/B,CAAf;AACA,IAAMI,UAAUN,QAAQ,iBAAR,CAAhB;AACA,IAAMO,aAAaP,QAAQ,aAAR,CAAnB;AACA,IAAMQ,WAAWR,QAAQ,UAAR,CAAjB;AACA,IAAMS,eAAeT,QAAQ,eAAR,CAArB;AACA,IAAMU,aAAaV,QAAQ,eAAR,EAAyBM,OAAzB,CAAnB;;AAEA,IAAMK,WAAWX,QAAQ,yBAAR,CAAjB;;AAEA;AACA;AACA;AACA,IAAMY,MAAMb,SAAZ;;AAEA;AACAa,IAAIC,GAAJ,CAAQd,QAAQe,MAAR,CAAe,QAAf,CAAR;AACAF,IAAIC,GAAJ,CAAQP,QAAQ;AACZS,WAAO,IAAIL,UAAJ,CAAe;AAClBM,aAAKX,OAAOY,UAAP,CAAkBD;AADL,KAAf,CADK;AAIZE,YAAQb,OAAOY,UAAP,CAAkBC,MAJd;AAKZC,YAAQ,KALI;AAMZC,uBAAmB;AANP,CAAR,CAAR;AAQAR,IAAIC,GAAJ,CAAQZ,UAAR;AACAW,IAAIC,GAAJ,CAAQN,WAAWc,UAAX,CAAsB,EAACC,UAAU,IAAX,EAAtB,CAAR;AACAV,IAAIC,GAAJ,CAAQN,WAAWgB,IAAX,EAAR;AACAX,IAAIC,GAAJ,CAAQJ,cAAR;AACAG,IAAIC,GAAJ,CAAQL,SAASgB,UAAT,EAAR;AACAZ,IAAIC,GAAJ,CAAQL,SAASF,OAAT,EAAR;;AAEA;AACAM,IAAIC,GAAJ,CAAQ,WAAR,EAAqBF,QAArB;;AAEA;AACAC,IAAIa,MAAJ,CAAWpB,OAAOqB,MAAP,CAAcC,IAAzB,EAA+B,UAAUC,GAAV,EAAe;AAC1C,QAAIA,GAAJ,EAAS;AACLC,gBAAQC,GAAR,CAAY,4CAA4CF,GAAxD;AACH;AACDC,YAAQC,GAAR,CAAY,iCAAZ;AACH,CALD;;AAOAC,OAAOC,OAAP,GAAiBpB,GAAjB","file":"index.js","sourcesContent":["\"use strict\";\nconst express = require('express');\nconst volleyball = require('volleyball');\nconst env = process.env.NODE_ENV || 'development';\nconst config = require('./config/config_env')[env];\nconst session = require('express-session');\nconst bodyParser = require('body-parser');\nconst passport = require('passport');\nconst cookieParser = require('cookie-parser');\nconst RedisStore = require('connect-redis')(session);\n\nconst profiles = require('./profiles/routes/index');\n\n// //import db\n// const db = require(\"./config/config_db\");\n//init app to express\nconst app = express();\n\n//Express MiddleWare\napp.use(express.static('public'));\napp.use(session({\n    store: new RedisStore({\n        url: config.redisStore.url\n    }),\n    secret: config.redisStore.secret,\n    resave: false,\n    saveUninitialized: false\n}));\napp.use(volleyball);\napp.use(bodyParser.urlencoded({extended: true}));\napp.use(bodyParser.json());\napp.use(cookieParser());\napp.use(passport.initialize());\napp.use(passport.session());\n\n//sets routes to appropriate names\napp.use(\"/profiles\", profiles);\n\n//starts server and assigns it to a port\napp.listen(config.server.port, function (err) {\n    if (err) {\n        console.log('There was a problem starting the server' + err);\n    }\n    console.log(\"Server has started on port 3000\");\n});\n\nmodule.exports = app;\n"]}