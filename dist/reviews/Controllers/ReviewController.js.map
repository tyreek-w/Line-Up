{"version":3,"sources":["../../../reviews/Controllers/ReviewController.js"],"names":["dbmain","require","module","exports","index","req","res","query","params","barberId","undefined","BarberId","userId","UserId","barbershopId","BarberShopId","haircutId","HaircutId","body","getComments","Comment","$ne","getLikes","Like","getRatings","Rating","Review","model","findAll","where","limit","then","send","reviews","err","status","error","post","Haircut","Barber","Barbershop","belongsTo","like","create","id","price","duration","parseInt","comment","parseFloat","rating","review"],"mappings":"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","file":"ReviewController.js","sourcesContent":["const dbmain = require('../../config/DB/DBmain');\n\nmodule.exports =  {\n    async index (req, res) {\n        let query = {};\n        if(!(req.params.barberId === undefined)){\n            query.BarberId = req.params.barberId;\n        }\n        if(!(req.params.userId === undefined)){\n            query.UserId = req.params.userId;\n        }\n        if(!(req.params.barbershopId === undefined)){\n            query.BarberShopId = req.params.barbershopId;\n        }\n        if(!(req.params.haircutId === undefined)){\n            query.HaircutId = req.params.userId;\n        }\n        if(req.body.getComments){query.Comment = { $ne: null }}\n        if(req.body.getLikes){query.Like = { $ne: null }}\n        if(req.body.getRatings){query.Rating = { $ne: null }}\n        let Review = dbmain.model(\"Review\");\n        try {\n            Review.findAll({\n                where: query,\n                limit: 20\n            }).then(reviews => {\n                res.send(reviews)\n            });\n        } catch(err) {\n            res.status(500).send({\n                error: 'An error has occurred trying to fetch songs' + err\n            })\n        }\n    },\n\n    async post (req, res) {\n        let Haircut = dbmain.model(\"Haircut\");\n        let Barber = dbmain.model('Barber');\n        let Barbershop = dbmain.model('BarberShop');\n        let Review = dbmain.model(\"Review\");\n\n        Review.belongsTo(Barbershop);\n        Review.belongsTo(Haircut);\n        Review.belongsTo(Barber);\n\n        let like = null;\n        if(req.body.like){\n            like = true;\n        }\n        try {\n            Review.create({\n                id: req.body.id,\n                price: req.body.price,\n                duration: req.body.duration,\n                HaircutId: parseInt(req.params.haircutId) || null,\n                BarberId: parseInt(req.params.barberId) || null,\n                BarberShopId: parseInt(req.params.barberId) || null,\n                Like: like,\n                Comment: req.body.comment || null,\n                Rating: parseFloat(req.body.rating) || null,\n            })\n                .then(review => {\n                    res.send(review)\n                })\n        } catch(err) {\n            res.status(500).send({\n                error: 'An error has occurred trying to create haircut' + err\n            })\n        }\n    }\n};"]}